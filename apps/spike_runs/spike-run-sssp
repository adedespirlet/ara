
=============
=  SSSP  =
=============


Data array:
4 9 7 1 1 1 1 2 2 2 2 4 1 1 4 4 1 5 1 1 1 1 1 1 1 2 7 1 2 2 2 2 3 2 1 1 2 1 1 2 3 1 6 1 1 3 1 1 2 4 2 4 1 3 2 1 2 7 1 4 3 4 1 1 3 1 2 1 1 4 3 2 3 3 1 1 1 5 4 2 3 1 12 2 1 3 10 2 1 1 2 6 2 2 1 4 1 7 2 3 2 2 1 1 9 1 1 7 2 1 1 2 2 1 4 1 2 3 
SSSP function
addToBucket function
findSmallestNonEmptyBucket function
processBucket function
Busy with BUcket index: 0 
First while loop
Second while loop
Avl value is: 1, Vl value is : 1 
Number heavy Edge 1 
printing light edges array:
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
l value is 0 
h value is 1
printing heavy edges array:
Req_dh is: 3, Req_vh is : 9 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
relax function
Total edge (avl) is : 1 
Avl value is: 1, Vl value is : 1 
total numver of updates: 1 
nEW BUCKET INDEX 1
Vertex value is 9 
addToBucket function
findSmallestNonEmptyBucket function
processBucket function
Busy with BUcket index: 1 
First while loop
Second while loop
Avl value is: 3, Vl value is : 3 
Number heavy Edge 0 
printing light edges array:
Req_dl is: 4, Req_vl is : 11 
Req_dl is: 4, Req_vl is : 12 
Req_dl is: 5, Req_vl is : 17 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
l value is 3 
relax function
Total edge (avl) is : 3 
Avl value is: 3, Vl value is : 3 
total numver of updates: 3 
nEW BUCKET INDEX 1
Vertex value is 11 
addToBucket function
nEW BUCKET INDEX 1
Vertex value is 12 
addToBucket function
nEW BUCKET INDEX 1
Vertex value is 17 
addToBucket function
First while loop
Second while loop
Avl value is: 3, Vl value is : 3 
Number heavy Edge 0 
Second while loop
Second while loop
printing light edges array:
Req_dl is: 7, Req_vl is : 11 
Req_dl is: 6, Req_vl is : 12 
Req_dl is: 7, Req_vl is : 13 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
l value is 3 
relax function
Total edge (avl) is : 3 
Avl value is: 3, Vl value is : 3 
total numver of updates: 1 
nEW BUCKET INDEX 2
Vertex value is 13 
addToBucket function
h value is 0
printing heavy edges array:
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
findSmallestNonEmptyBucket function
processBucket function
Busy with BUcket index: 2 
First while loop
Second while loop
printing light edges array:
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
Req_dl is: -1, Req_vl is : -1 
l value is 0 
h value is 0
printing heavy edges array:
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
Req_dh is: -1, Req_vh is : -1 
findSmallestNonEmptyBucket function
distances array:
-1 -1 -1 -1 -1 -1 -1 -1 -1 3 -1 4 4 7 -1 -1 0 5 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 
Golden Output
-1 -1 -1 -1 -1 -1 -1 -1 -1 3 -1 4 4 7 -1 -1 0 5 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 
